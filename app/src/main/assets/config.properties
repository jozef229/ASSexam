# Logger configuration
# ====================

# Basic configuration
# -------------------

# List of inputs to log. Specify the names of inputs as a comma-separated list. Names are
# case-insensitive.
#
# Available inputs:
# * `touch` - logs events from touch screen
# * `orientation` - logs changes in device orientation (portrait, landscape). Each event contains
#   the new device orientation. The initial orientation (upon starting logging) is logged as well.
# * `custom` - logs custom events
# * `lifecycle` - logs activity and fragment lifecycle events (started, paused, stopped, ...)
# * available sensors specified in `android.hardware.Sensor` prefixed with `TYPE_`. Instead of
#   `TYPE_`, use the `sensor_` prefix - for example, use `sensor_accelerometer` instead of
#   `TYPE_ACCELEROMETER`. For a complete list of sensors, see:
#   https://developer.android.com/reference/android/hardware/Sensor.html
#
# Specifying `sensor_all` will log events from all sensors. Specifying `all` will log events from
# all inputs. Note that logging too many inputs may result in a significant performance drop in your
# application.
Inputs=touch,orientation,custom,sensor_accelerometer,sensor_gyroscop,sensor_game_rotation_vector,sensor_geomagnetic_rotation_vector,sensor_gravity,sensor_linear_acceleration,sensor_magnetic_field,sensor_rotation_vector

# Rate of logging for sensor events. Applies to sensors only. In case of invalid values, `game` is
# used.
#
# Available values include the delay constants specified in `android.hardware.SensorManager`
# whose names are prefixed with `SENSOR_DELAY_`. For a complete list, see:
# https://developer.android.com/reference/android/hardware/SensorManager.html
SensorLogRate=game

# Scope in which sensor data should be logged.
#
# Available values:
# * `application` (default) - start logging sensor data in the entire application. Sensor logging is stopped when the
#   application is paused (i.e. is in the background) or stopped. Note that some sensor measurements may be lost when
#   transitioning between activities.
# * `device` - log sensor data while the application is running, even in the background or when the display is turned
#   off.
# * `device_display_on` - log sensor data while the application is running in the foreground or background, as long as
#   the device display is turned on.
SensorLogScope=application

# List of outputs to write/send logged data to. Allowed values:
# * `local` - store logged data locally (on the device) as comma-separated values (CSV) files. See
#   "Local storage configuration" below for more configuration options.
# * `server` - send logged data to a server as JSON objects. See "Server configuration" below to
#   properly set up sending data to your server.
# * `debug` - print logged data to the console
#
# You may specify multiple outputs, e.g. `local,server,debug`.
Outputs=local


# Local storage configuration
# ---------------------------

# Type of storage to write CSV-formatted logged data to. Allowed values:
# * `internal` (default) - internal storage
# * `external` - the primary external storage
# * `external_[number]` - [number]-th external storage (starting from 0). If that storage is not
#   available, the first (primary) external storage is used
#
# Other values are interpreted as `internal`. If the primary external storage is not available, the
# internal storage is used.
StorageType=internal

# Directory path (under the application directory) for storing CSV-formatted logged data locally.
LogsDirPath=logs

# Minimum required free storage space in MB for storing CSV-formatted logged data locally.
MinFreeSpaceLimitMB=300


# Server configuration
# --------------------

# Server URL to send JSON-formatted logged data to.
# Format: http[s]://<address>[:<port>]
# If empty, sending is disabled.
ServerUrl=

# Endpoint URL relative to `ServerUrl` to send JSON-formatted logged data to.
# The default value allows the following server implementation to be used:
# https://gitlab.com/behametrics/server
# You should not modify this entry unless providing your own server implementation.
EndpointUrl=data

# Contents of the "Logger" header for JSON-formatted logged data.
# The default value allows the following server implementation to be used:
# https://gitlab.com/behametrics/server
# You should not modify this entry unless providing your own server implementation.
LoggerHeader=behametrics/android
